{"version":3,"sources":["components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","role","Track","track","artist_name","track_name","to","commontrack_id","Tracks","undefined","length","Spinner","map","item","index","key","Search","trackTitle","handleChange","e","target","name","findTrack","preventDefault","onSubmit","bind","onChange","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","Fragment","album_id","album_name","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.52276b83.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst  Navbar = ()=> {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n        <span className=\"navbar-brand mb-0 h1 mx-auto\">Music Finder</span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action)=>{\r\n    switch (action.type) {\r\n        case 'SEARCH_TRACKS':\r\n            return {\r\n                ...state,\r\n                track_list:action.payload,\r\n                heading:'Search Result'\r\n            }\r\n            break;\r\n    \r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        track_list:[],\r\n        heading:'Top 10 Tracks',\r\n        dispatch:action =>this.setState(state=>reducer(state,action))\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=it&f_has_lyrics=1&apikey=68e4509c802e275391050287480ec387`)\r\n        .then(res=>{\r\n            // console.log(res.data)\r\n            this.setState({\r\n                track_list:res.data.message.body.track_list\r\n                // track_list:[]\r\n            })\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react';\r\n\r\n\r\n\r\nexport default () =>{\r\n    return(\r\n        <div className=\"spinner-border text-center\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst  Track = (props)=> {\r\n\r\n    const {track} = props;\r\n    return (\r\n        <div className=\"col-sm-6\">\r\n            <div className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <h5>{track.artist_name}</h5>\r\n                    <div className=\"card-text\">\r\n                        <strong> <i className=\"fa fa-play\"></i> Track:{track.track_name} </strong>\r\n                    </div>\r\n                    <Link to={`lyrics/track/${track.commontrack_id}`} className=\"btn btn-dark mt-3 btn-block\">\r\n                        <i className=\"fa fa-eye\"></i> View Lyrics {track.commontrack_id}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Track;","import React, { Component } from 'react';\r\n\r\nimport { Consumer } from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from './Track';\r\n\r\nclass Tracks extends Component {\r\n\r\n  \r\n    render()\r\n    {\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const {track_list} = value;\r\n                    const {heading} = value\r\n                    if(track_list=== undefined || track_list.length === 0)\r\n                    {\r\n                        return <Spinner/>\r\n                    }else \r\n                    {   \r\n                        return (\r\n\r\n                            <div className=\"row\">\r\n                                <h1 className=\"col-sm-12\">{heading}</h1>\r\n\r\n                               {track_list.map((item,index)=>(\r\n                                    <Track track={item.track}  key={index} />\r\n                               ))}\r\n                            </div>\r\n                        )\r\n                    }\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Tracks;","import React, { Component } from 'react';\r\nimport axios from  'axios';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Search extends Component {\r\n\r\n    state={\r\n        trackTitle:''\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    findTrack = (dispatch,e) =>{\r\n        e.preventDefault();\r\n\r\n        axios.get(`http://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=68e4509c802e275391050287480ec387`)\r\n        .then(res=>{\r\n            \r\n            dispatch({\r\n                type:'SEARCH_TRACKS',\r\n                payload:res.data.message.body.track_list\r\n            })\r\n         \r\n        })\r\n        .catch(err=>console.log(err))\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <Consumer>\r\n\r\n            {\r\n                value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-4 p-4\">\r\n                            <h1 className=\"display-4 text-center\">\r\n                                <i className=\"fa fa-music\"></i> Search For A Song\r\n                            </h1>\r\n                            <p className=\"lead text-center\">Get The Lyrics For Any Song</p>\r\n                            <form onSubmit={this.findTrack.bind(this,dispatch)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={this.handleChange} name=\"trackTitle\" value={this.state.trackTitle} className=\"form-control form-control-lg\" placeholder=\"Song Title ....\" />\r\n                                </div>\r\n                                <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Search","import React from 'react'\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\nconst Index = ()=> {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <Search />\r\n            <Tracks/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Index;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Link} from 'react-router-dom';\r\n// import Moment from 'react-moment';\r\n\r\n\r\n\r\nclass Lyrics extends Component {\r\n\r\n    state = {\r\n        track:{},\r\n        lyrics:{}\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://api.musixmatch.com/ws/1.1/track.get?commontrack_id=${this.props.match.params.id}&apikey=68e4509c802e275391050287480ec387`)\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            this.setState({\r\n                track:res.data.message.body.track\r\n                // track_list:[]\r\n            })\r\n\r\n            // console.log(this.state.track)\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        const {track} = this.state;\r\n        if(track === undefined || Object.keys(track).length === 0)\r\n        {\r\n            return <Spinner/>\r\n        }else \r\n        {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"btn btn-info btn-md mb-4\">Back</Link>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3>Track Name : {track.track_name}</h3>\r\n                        </div>\r\n                        <div className=\"card-body text-left\">\r\n                            <h4>Artist Name : {track.artist_name}</h4>\r\n                        </div>\r\n\r\n                        <ul className=\"list-group mt-3 text-left\">\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Album Id : </strong> {track.album_id}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Album Name : </strong> {track.album_name}\r\n                            </li>\r\n\r\n                            {/* <li className=\"list-group-item\">\r\n                             <strong>Release Date : </strong> <Moment format=\"MM/DD/YYYY\">{track.updated_time} </Moment>  \r\n                            </li> */}\r\n\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Lyrics;","import React from 'react';\nimport {BrowserRouter as Router ,Route ,Switch} from 'react-router-dom';\n\n// components\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\n\nimport { Provider } from './context';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <React.Fragment>\n          <Navbar/>\n          <div className=\"container text-center\">\n            <Switch>\n              <Route exact path=\"/\" component={Index} />\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n            </Switch>\n          </div>\n        </React.Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}